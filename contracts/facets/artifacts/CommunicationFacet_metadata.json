{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract CredentialEventFacet",
						"name": "_credentialOracle",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "CREDENTIAL_EVENT",
				"outputs": [
					{
						"internalType": "contract CredentialEventFacet",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "someParam",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_listId",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "thirdparam",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "num",
						"type": "uint256"
					},
					{
						"internalType": "uint32[]",
						"name": "_good",
						"type": "uint32[]"
					}
				],
				"name": "postVibe",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "someParam",
						"type": "string"
					},
					{
						"internalType": "bytes[]",
						"name": "proof",
						"type": "bytes[]"
					}
				],
				"name": "postVibe_authorised",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "someParam",
						"type": "string"
					}
				],
				"name": "postVibe_unauthorised",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"facets/CommunicationFacet.sol": "CommunicationFacet"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"facets/CommunicationFacet.sol": {
			"keccak256": "0x56348595de24eda7003e1e0a552301fb758c00de1017477a981798e58b02e42b",
			"license": "MIT",
			"urls": [
				"bzz-raw://aeaef9cc1f68d6367ca7996ab6cdc3c8d24a5000da027d42fa8361f2dd4daa1f",
				"dweb:/ipfs/QmUdd6RacW9P4iYmArUyvoDXdroyySB5RDE9skDb3Y7hk2"
			]
		},
		"facets/CredentialEventFacet.sol": {
			"keccak256": "0xc1c7e6ad94a56381e115bfdfff39e00ae4e67de8eb850f0d4b7dfbe574a28d6a",
			"license": "MIT",
			"urls": [
				"bzz-raw://56d80a5600f8da698aefd1190c5ace5413551b728407a218e6cd707b196bc310",
				"dweb:/ipfs/QmaxFKmwx5UrAMjXhu7aRu6BMt69JvuFnTD3KbvHG9jFyU"
			]
		},
		"facets/GateableFacet.sol": {
			"keccak256": "0xc6387a916f10bb65d84177ccf40fe6b5ba83a2e5a0a9a2b3be9c28d54fbc640f",
			"license": "MIT",
			"urls": [
				"bzz-raw://03435e98304e5ec172fe328202a51aaab2024ca9cb8b204da641a546b3c41358",
				"dweb:/ipfs/QmUdx947ktyFCBLMZZPrfBE6AzMA3xjmkwooV1f65po9WT"
			]
		}
	},
	"version": 1
}